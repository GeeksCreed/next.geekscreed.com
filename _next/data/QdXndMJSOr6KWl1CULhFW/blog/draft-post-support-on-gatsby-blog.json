{"pageProps":{"post":{"_published_at":"2018-12-16T00:00:00.000Z","title":"How to add Draft posts Support to Gatsby blog","published_at":"Dec 16, 2018","slug":"draft-post-support-on-gatsby-blog","authors":[{"id":"sasivarnan","name":"Sasivarnan R","bio":"Software Engineer. Tech Enthusiast. Loves coding ðŸ’» and music ðŸŽ¼.","location":"India","website":"https://new.geekscreed.com","twitter":"iamsasivarnan","linkedin":"sasivarnan","profile_image":"https://avatars0.githubusercontent.com/u/5305600?v=4","cover_image":""}],"content":"<p>Ever encountered a situation where you need to skip some unfinished, unpolished posts while deploying your Gatsby blog?</p>\n<p><a href=\"/tag/gatsby\">Gatsby</a> is awesome ðŸ’Ÿ.</p>\n<p>Using modern web technologies, it takes care of a lot of optimizations out of the box.</p>\n<p>Unlike traditional CMS like <code>WordPress</code> which gives a lot of features out of the box, in Gatsby, we need to hand pick the features that we need for our blog and build it by ourselves. It's not bad. It's cool ðŸ˜Ž.</p>\n<blockquote>\n<p>With great power comes great responsibility.</p>\n</blockquote>\n<p>As we have the complete control over adding features to Gatsby, there are lots of ways to achieve a single feature.</p>\n<p>In this article, I am gonna walk us through a simpler way to add support for draft posts to your Gatsby blog.</p>\n<p>Let's enhance our blog powered by <code>markdown</code> files to skip all the posts which are marked as <code>draft</code> in it's <code>frontmatter</code> while building the site.</p>\n<p>First of all, pick your first published post and add <code>draft: false</code>. This will make gatsby to create the <code>graphQL</code> schema for <code>markdownRemark</code> with <code>draft</code> field in it, which is needed in while querying.</p>\n<blockquote>\n<p><strong>Note:</strong> Gatsby infers the schema during the initial load of the development server. Hence you need to restart the gatsby development server in order to add <code>drafts</code> property to the gatsby schema.</p>\n</blockquote>\n<p>Add the following filter in every page where you are querying <code>allMarkdownRemark</code>.</p>\n<div class=\"remark-highlight\"><pre class=\"language-diff\"><code><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   ...\n</span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   allMarkdownRemark(\n</span></span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\">      sort: { fields: [frontmatter___date], order: DESC }\n</span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">      sort: { fields: [frontmatter___date], order: DESC },\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">      filter: {frontmatter: {draft: {ne: true}}}\n</span></span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   ) {\n</span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   ...</span></span>\n</code></pre></div>\n<p>Next, add the following change in the graphql query of <code>createPages</code> method in <code>gatsby-node.js</code>. It will create the <code>draft</code> posts during <code>development</code> phase but skips during the <code>production</code> phase.</p>\n<div class=\"remark-highlight\"><pre class=\"language-diff\"><code>...\nresolve(\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\"> graphql(\n</span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">   `{\n</span></span><span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\">      allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}, limit: 1000) {\n</span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">      allMarkdownRemark(\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">       sort: {fields: [frontmatter___date], order: DESC},\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         ${\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           process.env.NODE_ENV === 'production' ?\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           'filter: {frontmatter: {draft: {ne: true}}}' :\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           ''\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         }\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         limit: 1000\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">      ) {\n</span></span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span><span class=\"token line\">      edges {\n</span><span class=\"token prefix unchanged\"> </span><span class=\"token line\">       ...</span></span>\n</code></pre></div>\n<p>Now in <code>gatsby-config.js</code> file, make the following change to skip draft posts while generating the RSS feed.</p>\n<div class=\"remark-highlight\"><pre class=\"language-diff\"><code>...\n<span class=\"token deleted-sign deleted\"><span class=\"token prefix deleted\">-</span><span class=\"token line\">  `gatsby-plugin-feed`,\n</span></span><span class=\"token inserted-sign inserted\"><span class=\"token prefix inserted\">+</span><span class=\"token line\">  {\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">     resolve: `gatsby-plugin-feed`,\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">     options: {\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">       feeds: [\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         {\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           query: `\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           {\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">             allMarkdownRemark(\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">               limit: 1000,\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">               sort: {order: DESC, fields: [frontmatter___date]},\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">               filter: {frontmatter: {draft: {ne: true}}}\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">             ) {\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">               edges {\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                 node {\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                   excerpt\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                   html\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                   fields {\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                     slug\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                   }\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                   frontmatter {\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                     title\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                     date\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                   }\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">                 }\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">               }\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">             }\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           }\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           `,\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">           output: `rss.xml`\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">         },\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">       ]\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\">     }\n</span><span class=\"token prefix inserted\">+</span><span class=\"token line\"> },\n</span></span>...\n</code></pre></div>\n<p>That's it. Now your blog has support for draft posts. Any post which is marked as <code>draft: true</code> in its front matter will be skipped during the build time and available during the development time.</p>\n<p>I haven't covered every case. But this is applicable to most of the cases.</p>\n<p>Once check the list of plugins you use in your <code>gatsby-config.js</code> file. You might be using some other plugins like <a href=\"https://www.gatsbyjs.org/packages/gatsby-plugin-feed-generator/\">gatsby-plugin-feed-generator</a>. You would need to configure it's graphql query accordingly.</p>\n<p>Hope I have helped you in adding drafts feature to your Gatsby blog with a minimal effort.</p>\n<p>Did this post help you to achieve it or found it complicated?</p>\n<p>Feel free to share your thoughts in the comments section.</p>\n","excerpt":"\nEver encountered a situation where you need to skip some unfinished, unpolished posts while deploying your Gatsby blog?\n\n[Gatsby](/tag/gats","feature_image":"/images/blog/drafts.jpg","primary_tag":{"id":"gatsby","name":"Gatsby","slug":"gatsby","description":"Articles around Gatsby","feature_image":""},"tags":["gatsby","web-dev","graphql"]},"tags":[{"id":"gatsby","name":"Gatsby","slug":"gatsby","description":"Articles around Gatsby","feature_image":""},{"id":"web-dev","name":"Web Development","slug":"web-dev","description":"Articles around Web Development","feature_image":""},{"id":"graphql","name":"GraphQL","slug":"graphql","description":"Articles around GraphQL","feature_image":""}]},"__N_SSG":true}